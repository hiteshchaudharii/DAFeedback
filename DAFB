import os
import shutil
import pandas as pd
from openpyxl import load_workbook
from openpyxl import Workbook
import tkinter as tk
from tkinter import ttk
from tkinter import filedialog, messagebox
from openpyxl.utils import get_column_letter

def process_files(input_folder):
    # Loop through files in the directory
    for filename in os.listdir(input_folder):
        if filename.startswith('EXP_FV') and filename.endswith('.xlsx'):
            full_path = os.path.join(input_folder, filename)
            
            # Load the Excel file
        wb = load_workbook(full_path, data_only=True)
        
        # Check for the 'DUP Queries' sheet
        if 'DUP Queries' in wb.sheetnames:
            # Create a new workbook
            new_wb = Workbook()
            
            # Copy the 'DUP Queries' sheet to the new workbook
            source_sheet = wb['DUP Queries']
            new_sheet = new_wb.active
            new_sheet.title = 'DUP_DAFeedback'
            for row in source_sheet.iter_rows(values_only=True):
                new_sheet.append(row)
            

                
            # Save the new workbook
            output_filename1 = 'DUP_DAFeedback.xlsx'
            new_wb.save(output_filename1)
            
            #pandas cleaning
            df1 = pd.read_excel(output_filename1)
            df1['DA_FEEDBACK']=df1['DA_FEEDBACK'].str.upper()
            df_cleaned = df1[df1['DA_FEEDBACK'].notna() & (df1['DA_FEEDBACK'] != '')]
            
            
            columns_to_keep = ['RESPONSE_ID', 'QUERY_ID', 'OLD_VALUE', 'DA_FEEDBACK']
            df_filtered=df_cleaned[columns_to_keep]
            
            df_filtered.to_excel(output_filename1, index=False)
            
            column_to_check = 'DA_FEEDBACK'  # Replace 'Your_Column' with the actual column name
    
            other_values_present = ~df_filtered[column_to_check].isin(['OK', 'CHANGED']).any()
    
            if other_values_present:
                 messagebox.showinfo("DUP_DAFeedback", "'OK' or 'CHANGED' found, FILE IS OK")
            else:
                 messagebox.showinfo("DUP_DAFeedback", "Other feedback found, CHECK THE FILE")
            
            # Move the new workbook to the desired folder
            output_folder = input_folder
            output_path = os.path.join(output_folder, output_filename1)
            shutil.move(output_filename1, output_path)
        
        # Check for the 'FV Feedback' sheet
        if 'FV Feedback' in wb.sheetnames:
            # Create a new workbook
            new_wb = Workbook()
            
            # Copy the 'FV Feedback' sheet to the new workbook
            source_sheet = wb['FV Feedback']
            new_sheet = new_wb.active
            new_sheet.title = 'FV_DAFeedback'
            for row in source_sheet.iter_rows(values_only=True):
                new_sheet.append(row)
                

            
            # Save the new workbook
            output_filename2 = 'FV_DAFeedback.xlsx'
            new_wb.save(output_filename2)

            #pandas cleaning
            df2 = pd.read_excel(output_filename2)
            df2['DA_FEEDBACK']=df2['DA_FEEDBACK'].str.upper()
            df_cleaned2 = df2[df2['DA_FEEDBACK'].notna() & (df2['DA_FEEDBACK'] != '')]
            
            columns_to_keep = ['RESPONSE_ID', 'QUERY_ID', 'OLD_VALUE', 'DA_FEEDBACK']
            df_filtered2=df_cleaned2[columns_to_keep]
            
            df_filtered2.to_excel(output_filename2, index=False)            
            
            column_to_check = 'DA_FEEDBACK'  # Replace 'Your_Column' with the actual column name
    
            other_values_present = ~df_filtered2[column_to_check].isin(['OK', 'CHANGED']).any()
    
            if other_values_present:
                 messagebox.showinfo("FV_DAFeedback", "'OK' or 'CHANGED' found, FILE IS OK")
            else:
                 messagebox.showinfo("FV_DAFeedback", "Other feedback found, CHECK THE FILE")
            
            # Move the new workbook to the desired folder
            output_folder = input_folder
            output_path = os.path.join(output_folder, output_filename2)
            shutil.move(output_filename2, output_path)
            


        messagebox.showinfo("Process Complete", "Files have been processed successfully.")
            

    
        
    
def select_folder():
    folder_selected = filedialog.askdirectory()
    if folder_selected:
        path_entry.delete(0, tk.END)  # Clear any existing text in the entry
        path_entry.insert(0, folder_selected)  # Insert the selected folder path

def run_processing():
    input_folder = path_entry.get()
    process_files(input_folder)

# Create the main window
root = tk.Tk()
root.title("Get DA_Feedback Files")
root.geometry("400x200")

# Add a label and entry to input the path
path_label = tk.Label(root, text="Directory Path:")
path_label.pack(pady=10)

path_entry = tk.Entry(root, width=50)
path_entry.pack(pady=5)

# Add a button to open the folder dialog
select_button = tk.Button(root, text="Browse", command=select_folder)
select_button.pack(pady=5)

# Add a button to run the processing
run_button = tk.Button(root, text="Run", command=run_processing)
run_button.pack(pady=20)


# Run the GUI loop
root.mainloop()
